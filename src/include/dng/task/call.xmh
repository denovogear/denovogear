/*
 * Copyright (c) 2014 Reed A. Cartwright
 * Authors:  Reed A. Cartwright <reed@cartwrig.ht>
 *
 * This file is part of DeNovoGear.
 *
 * DeNovoGear is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */

#include "../detail/xm.h"

/***************************************************************************
 *    X-Macro List                                                         *
 *                                                                         *
 * Defines options for dng-call                                            *
 *                                                                         *
 * XM((long)(name), (shortname), "description", typename, defaultvalue)    *
 ***************************************************************************/

//XM((bed), (b), "file containing a list of positions or regions", std::string, "")
XM((fasta), (f), "faidx indexed reference sequence file", std::string, "")
XM((min)(qlen), (l), "minimum query length", int, 0)
XM((min)(prob), (m), "minimum probability for reporting a mutation", double, DL(0.1,"0.1"))
XM((mu), , "the germline mutation rate", double, DL(1e-9,"1e-9"))
XM((mu)(somatic), , "the somatic mutation rate", double, DL(0.0,"0"))
XM((mu)(library), , "the library prep mutation rate", double, DL(0.0,"0"))
XM((nuc)(freqs), , "nucleotide frequencies in ACGT order", std::string, "0.3,0.2,0.2,0.3")
XM((ped), (p), "the pedigree file", std::string, "")
XM((min)(basequal), (q), "minimum base quality", int, 0)
XM((min)(mapqual), (Q), "minimum mapping quality", int, 0)
XM((region), (r), "chromosomal region", std::string, "")
XM((ref)(weight), (R), "weight given to reference base for population prior", double, DL(1.0,"1"))
XM((sam)(files), (s), "file containing a list of input filenames, one per line", std::string, "")
XM((theta), , "the population diversity", double, DL(0.001, "0.001"))
XM((output), (o),"Output VCF/BCF file", std::string, "-")
XM((vcf)(input), (v), "Input file is a VCF file instead of default BAM", bool, false)

/***************************************************************************
 *    cleanup                                                              *
 ***************************************************************************/
#include "../detail/xm.h"

